<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.WorksMapper">
  <resultMap id="BaseResultMap" type="pojo.Works">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="collection" jdbcType="VARCHAR" property="collection" />
    <result column="sec_col" jdbcType="VARCHAR" property="secCol" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="create_at" jdbcType="BIGINT" property="createAt" />
    <result column="update_at" jdbcType="BIGINT" property="updateAt" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
    <result column="induction" jdbcType="VARCHAR" property="induction" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="video" jdbcType="VARCHAR" property="video" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="text" jdbcType="VARCHAR" property="text" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, collection, sec_col, status, create_at, update_at, create_by, update_by, 
    induction, image, video, pic, text
  </sql>
  <select id="selectByExample" parameterType="pojo.WorksExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from works
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from works
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from works
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="pojo.Works">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into works (id, name, collection, 
      sec_col, status, create_at, 
      update_at, create_by, update_by, 
      induction, image, video, 
      pic, text)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{collection,jdbcType=VARCHAR}, 
      #{secCol,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{createAt,jdbcType=BIGINT}, 
      #{updateAt,jdbcType=BIGINT}, #{createBy,jdbcType=BIGINT}, #{updateBy,jdbcType=BIGINT}, 
      #{induction,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}, #{video,jdbcType=VARCHAR}, 
      #{pic,jdbcType=VARCHAR}, #{text,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="pojo.Works">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into works
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="name != null">
        name,
      </if>
      <if test="collection != null">
        collection,
      </if>
      <if test="secCol != null">
        sec_col,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="induction != null">
        induction,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="video != null">
        video,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="text != null">
        text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="collection != null">
        #{collection,jdbcType=VARCHAR},
      </if>
      <if test="secCol != null">
        #{secCol,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="induction != null">
        #{induction,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="video != null">
        #{video,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="text != null">
        #{text,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pojo.Works">
    update works
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="collection != null">
        collection = #{collection,jdbcType=VARCHAR},
      </if>
      <if test="secCol != null">
        sec_col = #{secCol,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="induction != null">
        induction = #{induction,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="video != null">
        video = #{video,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="text != null">
        text = #{text,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="pojo.Works">
    update works
    set name = #{name,jdbcType=VARCHAR},
      collection = #{collection,jdbcType=VARCHAR},
      sec_col = #{secCol,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=BIGINT},
      update_at = #{updateAt,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT},
      induction = #{induction,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      video = #{video,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      text = #{text,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>