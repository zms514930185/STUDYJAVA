<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.ReplyMapper">
  <resultMap id="BaseResultMap" type="pojo.Reply">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="works_id" jdbcType="BIGINT" property="worksId" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="create_at" jdbcType="BIGINT" property="createAt" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="reply" jdbcType="VARCHAR" property="reply" />
    <result column="reply_id" jdbcType="VARCHAR" property="replyId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, works_id, status, create_at, create_by, reply, reply_id
  </sql>
  <select id="selectByExample" parameterType="pojo.ReplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reply
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from reply
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="pojo.Reply">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into reply (id, works_id, status, 
      create_at, create_by, reply, 
      reply_id)
    values (#{id,jdbcType=BIGINT}, #{worksId,jdbcType=BIGINT}, #{status,jdbcType=VARCHAR}, 
      #{createAt,jdbcType=BIGINT}, #{createBy,jdbcType=BIGINT}, #{reply,jdbcType=VARCHAR}, 
      #{replyId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="pojo.Reply">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="worksId != null">
        works_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="reply != null">
        reply,
      </if>
      <if test="replyId != null">
        reply_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="worksId != null">
        #{worksId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="reply != null">
        #{reply,jdbcType=VARCHAR},
      </if>
      <if test="replyId != null">
        #{replyId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pojo.Reply">
    update reply
    <set>
      <if test="worksId != null">
        works_id = #{worksId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="reply != null">
        reply = #{reply,jdbcType=VARCHAR},
      </if>
      <if test="replyId != null">
        reply_id = #{replyId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="pojo.Reply">
    update reply
    set works_id = #{worksId,jdbcType=BIGINT},
      status = #{status,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=BIGINT},
      reply = #{reply,jdbcType=VARCHAR},
      reply_id = #{replyId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>